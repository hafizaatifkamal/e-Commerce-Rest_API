const { json } = require("body-parser");
const usersModel = require("../model/usersModel");
const UsersRoute = require("../routes/users");

/* Authentication Part */


// Handelling all possible errors
const handleErrors = (err) => {

    console.log(err.message, err.code);

    let errors = { firstName: '', email: '', password: '' };

    // Checking for duplicate email
    if (err.code === 11000) {
        errors.email = 'This email is registered already';
        return errors;
    }

    // Validating errors
    if (err.message.includes('User validation failed')) {

        Object.values(err.errors).forEach(({ properties }) => {

            errors[properties.path] = properties.message;
        });
    }

    return errors;
}





/* CRUD Operations Part */


// Inserting and Stroring users data into database by POST request
const insertUsers = async(req, res, next) => {

    let newUser = new usersModel({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        password: req.body.password,
        role: req.body.role,
        profileImage: req.body.profileImage
    });

    try {

        const user = await newUser.save();

        res.status(201).json({ message: "User Registered Successfully!" });

    } catch (err) {

        // Calling errors handler
        const errors = handleErrors(err);
        res.status(400).json({ errors });
    }

}




// Getting all the users by GET request
const getUsers = async(req, res) => {
    try {
        const users = await usersModel.find({});
        // console.log(users);
        res.status(200).send(users);
    } catch (error) {
        console.log(`Something went wrong! ${error}`);
    }
};



// Getting individual data using _id generated by MongoDB
const getUsersDetails = async(req, res) => {
    try {
        const usersDetails = await usersModel.findById(req.params.id);

        res.status(200).send(usersDetails);
    } catch (error) {

        console.log(`Something went wrong! ${error}`);
    }
};




// Searching a particular users data using query operation by GET request
const usersQuery = async(req, res) => {

    try {

        const query = req.query;
        const queryParams = {...query };

        const users = await usersModel.find(queryParams);

        // console.log(queryParams);

        res.status(200).send(users);

    } catch (error) {

        console.log(`Something went wrong! ${error}`);
    }
}




// Updating selected users data using _id by PUT request
const updateUsers = async(req, res) => {
    try {
        const modifiedUser = await usersModel.findByIdAndUpdate(req.params.id, req.body);

        res.status(200).send(modifiedUser);

    } catch (error) {

        console.log(`Something went wrong! ${error}`);
    }
};



// Deleting selected users data using _id by DELETE request
const deleteUsers = async(req, res) => {
    try {

        const deletedUser = await usersModel.findByIdAndDelete(req.params.id, req.body);

        res.status(200).send(deletedUser);

    } catch (error) {

        console.log(`Something went wrong! ${error}`);
    }
};



module.exports = {
    insertUsers,
    getUsers,
    getUsersDetails,
    usersQuery,
    updateUsers,
    deleteUsers,
};